---
- name: Generate private key
  community.crypto.openssl_privatekey:
    path: "{{ ssl_key_path }}"
    size: 4096
    type: RSA
  register: private_key

- name: Generate CSR
  community.crypto.openssl_csr:
    path: "{{ ssl_csr_path }}"
    privatekey_path: "{{ ssl_key_path }}"
    common_name: "{{ ssl_common_name }}"
    country_name: "{{ ssl_country }}"
    state_or_province_name: "{{ ssl_state }}"
    locality_name: "{{ ssl_locality }}"
    organization_name: "{{ ssl_organization }}"
    organizational_unit_name: "{{ ssl_organizational_unit }}"
    key_usage:
      - digitalSignature
      - keyEncipherment
    extended_key_usage:
      - serverAuth
    subject_alt_name: "DNS:{{ ssl_common_name }}"
  register: csr_result

- name: Generate self-signed certificate
  community.crypto.x509_certificate:
    path: "{{ ssl_cert_path }}"
    csr_path: "{{ csr_result.filename }}"
    privatekey_path: "{{ ssl_key_path }}"
    provider: selfsigned
    selfsigned_not_after: "+3650d"
    force: true

- name: Ensure sufficient server_names_hash_bucket_size for long hostnames
  blockinfile:
    path: /etc/nginx/nginx.conf
    insertafter: '^http\s*\{$'
    block: |
      # Increase bucket size to support long server_name values
      server_names_hash_bucket_size 128;

- name: Deploy HTTPS server config into conf.d
  copy:
    dest: /etc/nginx/conf.d/nginx_https.conf
    owner: root
    group: root
    mode: '0644'
    content: |
      server {
        listen {{ nginx_port_http }};
        listen [::]:{{ nginx_port_http }};
        server_name {{ ssl_common_name }};
        return 301 https://$host$request_uri;
      }

      server {
        listen {{ nginx_port_https }} ssl;
        listen [::]:{{ nginx_port_https }} ssl;
        server_name {{ ssl_common_name }};
        ssl_certificate "{{ ssl_cert_path }}";
        ssl_certificate_key "{{ ssl_key_path }}";
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        root /usr/share/nginx/html;
        index index.html index.htm;
        location / {
          try_files $uri $uri/ =404;
        }
      }

- name: Test Nginx configuration syntax
  command: nginx -t
  register: nginx_test
  changed_when: false

- name: Fail if Nginx configuration is invalid
  fail:
    msg: "Nginx configuration test failed:\n{{ nginx_test.stderr }}"
  when: nginx_test.rc != 0

- name: Reload or start Nginx service
  systemd:
    name: nginx
    state: started
    enabled: yes
    daemon_reload: yes